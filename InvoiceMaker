<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>Invoice Generator (Indonesian Format)</title>
  <style>
    .preview {overflow: visible !important;page-break-inside: auto;}
    .preview table, 
    .preview tr, 
    .preview td, 
    .preview th {page-break-inside: avoid;page-break-after: auto;page-break-before: auto;}
    :root{--bg:#f6f7fb;--card:#fff;--muted:#6b7280;--accent:#0f172a}
    body{font-family:Inter,ui-sans-serif,system-ui,-apple-system,Segoe UI,Roboto,"Helvetica Neue",Arial; background:var(--bg); padding:24px; color:#111}
    .container{max-width:900px;margin:0 auto}
    .top{display:flex;gap:20px;align-items:center;justify-content:space-between;margin-bottom:18px}
    .brand{display:flex;gap:18px;align-items:center}
    .logo{width:86px;height:86px;background:linear-gradient(135deg,#11182700,#0ea5a000);border-radius:12px;display:flex;align-items:center;justify-content:center;color:#fff;font-weight:700}
    .meta{min-width:300px;text-align:right}
    .meta input{display:block;width:100%;box-sizing:border-box;margin-top:6px}
    .card{background:var(--card);padding:20px;border-radius:12px;box-shadow:0 6px 18px rgba(16,24,40,0.06)}

    .fields{display:flex;gap:12px;margin-bottom:12px}
    .fields > div{flex:1}
    label{font-size:12px;color:var(--muted);display:block;margin-bottom:6px}
    input[type="text"], input[type="date"], input[type="number"], select, textarea{padding:8px;border:1px solid #e6e9ef;border-radius:8px;width:100%;font-size:14px}

    table{width:100%;border-collapse:collapse;margin-top:12px}
    th, td{padding:10px;border-bottom:1px solid #eef2ff;text-align:left;font-size:14px}
    th{background:#fafafa;color:#374151}
    .qty{width:90px}
    .price{width:160px;text-align:right}
    .right{text-align:right}

    .actions{display:flex;gap:8px;justify-content:flex-end;margin-top:12px}
    button{padding:10px 14px;border-radius:8px;border:0;background:#0ea5a0;color:white;cursor:pointer}
    button.ghost{background:#e6e9ef;color:#111}

    .totals{display:flex;justify-content:flex-end;margin-top:12px}
    .totals .inner{width:320px}
    .totals-row{display:flex;justify-content:space-between;padding:6px 0}
    .notes{margin-top:18px;font-size:13px;color:#374151}

    /* invoice preview card */
    .preview {
      margin-top: 18px;
      background: #fff;
      padding: 18px;
      padding-bottom: 30px;
      border-radius: 10px;
      border: 1px solid #eef2ff;
      box-sizing: border-box;
      max-width: 7.5in; /* restrict width so it fits inside A4 page (8.27in width - margins) */
    }
    .inv-head{display:flex;justify-content:space-between;align-items:center;margin-bottom:10px}
    .inv-logo{display:flex;gap:12px;align-items:center}
    .inv-logo .logo{width:54px;height:54px;border-radius:8px;font-size:18px}
    .inv-title{font-weight:700}
    .small{font-size:13px;color:var(--muted)}
    @media print{body{background:white} .actions{display:none}}
  </style>
</head>
<body>
  <div class="container">
    <div class="top">
      <div class="brand">
      <div class="logo">
        <img src="crispynetnot.png" alt="Crispy Network Logo" style="max-width:100%;max-height:100%;object-fit:contain;">
      </div>
        <div>
          <div style="font-weight:700;font-size:18px">PT. Crispy Network</div>
          <div class="small">Jl. Jendral Sudirman No. 69, Central Jakarta, Indonesia · +62 858-8814-1708</div>
        </div>
      </div>
      <div class="meta">
        <label style="font-size:12px;color:var(--muted)">Invoice ID</label>
        <input id="invoice_no" type="text" value="Invoice No. 0500" />
        <label style="font-size:12px;color:var(--muted);margin-top:6px">Date</label>
        <input id="invoice_date" type="date" value="" />
      </div>
    </div>

    <div class="card">
      <div style="margin-top:12px">
        <table id="user-table">
          <thead>
            <tr>
              <th style="width:10%">Username</th>
              <th style="width:10%">Discord</th>
              <th style="width:10%">Ranks</th>
            </tr>
          </thead>
          <tbody id="user-table">
          </tbody>
        </table>
        <div>
          <input id="nick" type="text" placeholder="" style="padding:8px; border:1px solid #e6e9ef; border-radius:8px; width:34%; font-size:14px; box-sizing:border-box; margin-top:4px;" />
          <input id="discord" type="text" placeholder="" style="padding:8px; border:1px solid #e6e9ef; border-radius:8px; width:33%; font-size:14px; box-sizing:border-box; margin-top:4px;" />
          <select id="rank" style="padding:8px; border:1px solid #e6e9ef; border-radius:8px; width:31.98%; font-size:14px; box-sizing:border-box; margin-top:4px;">
            <option value=""></option>
            <option value="CUSTOM|1000000">CUSTOM</option>
            <option value="CRISPY+|570000">CRISPY+</option>
            <option value="RICH|360000">RICH</option>
            <option value="MVP++|220000">MVP++</option>
            <option value="MVP+|180000">MVP+</option>
            <option value="MVP|140000">MVP</option>
            <option value="VIP+|90000">VIP+</option>
          </select>
        </div>
      </div>

      <div style="margin-top:12px">
        <table id="items-table">
          <thead>
            <tr>
              <th style="width:48%">Item Name</th>
              <th class="qty">Quantity</th>
              <th class="price">Price</th>
              <th class="price">Line Total</th>
              <th style="width:48px"></th>
            </tr>
          </thead>
          <tbody id="items-body">
          </tbody>
        </table>
        <div style="margin-top:8px;display:flex;gap:8px">
          <button id="add-item">Add Item</button>
          <button class="ghost" id="clear-items">Clear Items</button>
        </div>

        <div class="totals">
          <div class="inner">
            <div class="totals-row"><div class="small">Subtotal</div><div id="subtotal">Rp. 0</div></div>
            <div class="totals-row"><div class="small">Discount (%)</div><div><input id="discount" type="number" min="0" max="100" value="" style="width:50px;padding:6px;border-radius:8px;border:1px solid #e6e9ef;text-align:right" /></div></div>
            <div class="totals-row" style="font-weight:700;font-size:18px"><div>Total</div><div id="total">Rp. 0</div></div>
          </div>
        </div>

        <div class="notes">
          <div style="font-weight:700;margin-bottom:6px">Notes</div>
          <textarea id="notes" rows="3"></textarea>
        </div>

        <div id="notesPreview"></div>
          <div id="cautionPreview" style="margin-top: 10px; font-size: 0.9em; color: #a00;">
            <strong>Terms:</strong> Simpan invoice / receipt ini untuk tujuan refund!<br>
            Jika kehilangan 3x dalam refund item untuk Season berikutnya, pembelian hangus, tidak ada refund atau invoice baru.
        </div>

        <div class="actions">
          <button id="download">Download PDF</button>
          <button class="ghost" id="reset">Reset</button>
        </div>

        <div class="preview" id="preview">
          <div class="inv-head">
            <div class="inv-logo">
              <div class="logo">
                <img src="crispynetnot.png" alt="Crispy Network Logo" style="max-width:100%;max-height:100%;object-fit:contain;">
              </div>
              <div>
                <div class="inv-title">PT. Crispy Network</div>
                <div class="small">Jl. Jendral Sudirman No. 69, Central Jakarta, Indonesia · +62 858-8814-1708</div>
              </div>
            </div>
            <div style="text-align:right">
              <div><strong id="p-inv">Invoice No. 0500</strong></div>
              <div class="small" id="p-date">-</div>
            </div>
          </div>

          <div style="display:flex;justify-content:space-between;gap:12px;margin-bottom:12px">
            <div>
              <div style="font-weight:700">Billed To</div>
              <div id="p-nick"></div>
              <div id="p-discord" class="small"></div>
              <div id="p-rank" style="margin-top:8px;font-weight:600"></div>
            </div>
          </div>

          <table>
            <thead>
              <tr><th>Items</th><th class="qty">Quantity</th><th class="price">Price</th><th class="price">Total</th></tr>
            </thead>
            <tbody id="p-items">
            </tbody>
          </table>

          <div style="display:flex;justify-content:flex-end;margin-top:12px">
            <div style="width:280px">
              <div class="totals-row"><div class="small">Subtotal</div><div id="p-sub">Rp. 0</div></div>
              <div class="totals-row"><div class="small">Discount</div><div id="p-disc">Rp. 0</div></div>
              <div class="totals-row" style="font-weight:700;font-size:18px"><div>Total</div><div id="p-total">Rp. 0</div></div>
            </div>
          </div>

          <div style="margin-top:16px" class="small">Notes: <span id="p-notes">-</span></div>
        </div>

      </div>
    </div>
  </div>

  <!-- libraries for PDF export -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
  <script>
    // helpers
    function formatRp(n){
      if(n === undefined || n === null || isNaN(Number(n))) return 'Rp. 0';
      const isNegative = Number(n) < 0;
      n = Math.abs(Number(n));
      const cents = Math.round((n - Math.floor(n)) * 100);
      const intPart = Math.floor(n);
      // thousand separator dot, decimal comma
      const intStr = intPart.toString().replace(/\B(?=(\d{3})+(?!\d))/g, '.');
      if(cents === 0) return (isNegative?'-':'') + 'Rp. ' + intStr;
      const centsStr = cents.toString().padStart(2,'0');
      return (isNegative?'-':'') + 'Rp. ' + intStr + ',' + centsStr;
    }

    function parseNumberVal(v){
      if(v === '' || v === null || v === undefined) return 0;
      return Number(String(v).replace(/[^0-9-]+/g,'')) || 0;
    }

    const itemsBody = document.getElementById('items-body');
    const pItems = document.getElementById('p-items');
    const subtotalEl = document.getElementById('subtotal');
    const totalEl = document.getElementById('total');
    const discountEl = document.getElementById('discount');

    function createItemRow(name='',qty=0,price=0){
      const tr = document.createElement('tr');
      tr.innerHTML = `
        <td><input class="iname" type="text" value="${name}" placeholder="" style="width:100%;padding:6px;border-radius:6px;border:1px solid #eef2ff"/></td>
        <td class="qty"><input class="iqty" type="text" min="0" max="64" value="${qty || ''}" placeholder="0" style="width:80px;padding:6px;border-radius:6px;border:1px solid #eef2ff;text-align:left"/></td>
        <td class="price"><input class="iprice" type="text" value="${price === 0 ? '' : price}" placeholder="0" style="width:140px;padding:6px;border-radius:6px;border:1px solid #eef2ff;text-align:left"/></td>
        <td class="price line">Rp. 0</td>
        <td><button class="remove ghost">x</button></td>
      `;
      itemsBody.appendChild(tr);

      // bind events
      const iname = tr.querySelector('.iname');
      const iqty = tr.querySelector('.iqty');
      const iprice = tr.querySelector('.iprice');
      const line = tr.querySelector('.line');
      const remove = tr.querySelector('.remove');

    function updateLine(){
      let q = parseNumberVal(iqty.value);
      if (q > 64) q = 64;
      if (q < 0) q = 0;
      iqty.value = q === 0 ? '' : q;  // show placeholder if zero

      let p = parseNumberVal(iprice.value);
      iprice.value = p === 0 ? '' : formatRp(p); // format price or show placeholder

      const lt = q * p;
      line.textContent = formatRp(lt);
      recalc();
    }

      // format as rupiah instantly while typing
      iprice.addEventListener('input', () => {
        // get only digits from input
        let raw = iprice.value.replace(/[^0-9]/g, '');
        if (raw === '') {
          iprice.value = '';
          updateLine();
          return;
        }
        // parse number and format rupiah
        let num = Number(raw);
        iprice.value = formatRp(num);
        updateLine();
      });

      // keep updateLine on blur too (optional)
      iprice.addEventListener('blur', () => {
        if(iprice.value === '') return;
        let num = parseNumberVal(iprice.value);
        iprice.value = formatRp(num);
        updateLine();
      });

      iqty.addEventListener('input', updateLine);
      iname.addEventListener('input', updatePreview);
      remove.addEventListener('click', ()=>{ tr.remove(); recalc(); updatePreview(); });

      updateLine();
      updatePreview();
    }

    document.getElementById('add-item').addEventListener('click', ()=>{ createItemRow('','1','0'); });
    document.getElementById('clear-items').addEventListener('click', ()=>{ itemsBody.innerHTML=''; recalc(); updatePreview(); });

    function recalc(){
      const rows = itemsBody.querySelectorAll('tr');
      let subtotal = 0;
      rows.forEach(r=>{
        const q = parseNumberVal(r.querySelector('.iqty').value);
        const p = parseNumberVal(r.querySelector('.iprice').value);
        subtotal += q * p;
      });

      const rankVal = document.getElementById('rank').value;
      let rankPrice = 0;
      if(rankVal){
        const parts = rankVal.split('|');
        if(parts.length === 2){
          rankPrice = Number(parts[1]) || 0;
        }
      }
      subtotal += rankPrice;

      const discPercent = parseNumberVal(discountEl.value);
      const discountValue = subtotal * (discPercent / 100);
      const total = subtotal - discountValue;

      console.log('subtotal:', subtotal, 'discount %:', discPercent, 'discount value:', discountValue, 'total:', total);

      subtotalEl.textContent = formatRp(subtotal);
      totalEl.textContent = formatRp(total);

      document.getElementById('p-sub').textContent = formatRp(subtotal);
      document.getElementById('p-disc').textContent = formatRp(discountValue);
      document.getElementById('p-total').textContent = formatRp(total);
    }

    function updateInputsDisplay(){
      document.querySelectorAll('input.iqty, input.iprice').forEach(input => {
        let val = input.value.replace(/\D/g,''); // get numeric only
        if(val === '0' || val === '' ){
          input.value = '';
          input.placeholder = '0';
        } else {
          input.value = val;
          input.placeholder = '';
        }
      });
    }

    // call updateInputsDisplay after any input changes
    itemsBody.addEventListener('input', () => {
      updateInputsDisplay();
      recalc();
      updatePreview();
    });
    updateInputsDisplay();

    function updatePreview(){
      // update notesPreview text
      document.getElementById('notesPreview').innerText =
        document.getElementById('notes').value || '';

      // update main invoice preview
      document.getElementById('p-inv').textContent = document.getElementById('invoice_no').value || '';
      const d = document.getElementById('invoice_date').value;
      document.getElementById('p-date').textContent = d ? new Date(d).toLocaleDateString('id-ID') : '';
      document.getElementById('p-nick').textContent = document.getElementById('nick').value || '';
      document.getElementById('p-discord').textContent = document.getElementById('discord').value || '';

      const rankVal = document.getElementById('rank').value;
      if(rankVal){
        const [rname,rprice] = rankVal.split('|');
        document.getElementById('p-rank').textContent = 'Rank Purchase: ' + rname;
      } else {
        document.getElementById('p-rank').textContent = '';
      }

      // preview items with rank included as line
      pItems.innerHTML = '';

      if(rankVal){
        const [rname,rprice] = rankVal.split('|');
        if(rname && rprice && Number(rprice) > 0){
          const trRank = document.createElement('tr');
          trRank.innerHTML = `
            <td>Rank: ${rname}</td>
            <td class="qty">1</td>
            <td class="price">${formatRp(Number(rprice))}</td>
            <td class="price">${formatRp(Number(rprice))}</td>
          `;
          pItems.appendChild(trRank);
        }
      }

      const rows = itemsBody.querySelectorAll('tr');
      rows.forEach(r=>{
      const name = r.querySelector('.iname').value || '';
      const qty = parseNumberVal(r.querySelector('.iqty').value) || 0;
      const price = parseNumberVal(r.querySelector('.iprice').value) || 0;
      if(name === '' && qty === 0 && price === 0) return; // skip empty rows
      const line = qty * price;
      const tr = document.createElement('tr');
      tr.innerHTML = `<td>${name}</td><td class="qty">${qty}</td><td class="price">${formatRp(price)}</td><td class="price">${formatRp(line)}</td>`;
      pItems.appendChild(tr);
    });

      document.getElementById('p-notes').textContent = document.getElementById('notes').value || '';
    }

    // auto replace spaces with underscores for minecraft usernames
    document.getElementById('nick').addEventListener('input', function() {
      this.value = this.value.replace(/\s+/g, '_');
      updatePreview();
    });

    // bind inputs to preview updates
    document.getElementById('invoice_no').addEventListener('input', updatePreview);
    document.getElementById('invoice_date').addEventListener('input', updatePreview);
    document.getElementById('nick').addEventListener('input', updatePreview);
    document.getElementById('discord').addEventListener('input', updatePreview);
    document.getElementById('rank').addEventListener('change', updatePreview);
    discountEl.addEventListener('input', ()=>{ recalc(); updatePreview(); });
    document.getElementById('notes').addEventListener('input', updatePreview);

    // initial state
    createItemRow('',0,0);
    recalc();

    // Download PDF
    document.getElementById('download').addEventListener('click', ()=>{
      // update preview before export
      recalc(); updatePreview();
      const element = document.getElementById('preview');
      const opt = {
        margin:       0.4,
        filename:     (document.getElementById('invoice_no').value || 'invoice') + '.pdf',
        image:        { type: 'jpeg', quality: 0.98 },
        html2canvas:  { scale: 2, useCORS:true },
        jsPDF:        { unit: 'in', format: 'a4', orientation: 'portrait' }
      };
      html2pdf().set(opt).from(element).save();
    });

    document.getElementById('reset').addEventListener('click', ()=>{
      document.getElementById('invoice_no').value = 'Invoice No. 0500';
      document.getElementById('invoice_date').value = '';
      document.getElementById('nick').value = '';
      document.getElementById('discord').value = '';
      document.getElementById('rank').value = '';
      itemsBody.innerHTML = '';
      discountEl.value = 0;
      createItemRow('',0,0);
      recalc(); updatePreview();
    });

    // auto-format preview on any table change
    itemsBody.addEventListener('input', ()=>{ recalc(); updatePreview(); });
  </script>
</body>
</html>
